% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ploting.R
\name{plotGeneFit}
\alias{plotGeneFit}
\title{Plot regression results for specific genes}
\usage{
plotGeneFit(
  gene,
  norm_counts,
  metadata,
  decay_result,
  gene_infos,
  gene_type = "Geneid",
  showRegion = T,
  level = 0.95,
  threshold = 32,
  experiments = NULL,
  control = NULL
)
}
\arguments{
\item{gene}{character. Gene id or name. Must be found in \code{gene_infos}
column specified by \code{gene_type} argument.}

\item{norm_counts}{numeric matrix or data.frame. Gene counts matrix after
normalisation.}

\item{metadata}{data.frame. Metadata of the data. Must have specific column
names see \code{\link{checkMetadata}} function.}

\item{decay_result}{list. Decay result as derived from
\code{\link{inferDecay}} function.}

\item{gene_infos}{data.frame. Contain gene information.
\code{gene_infos$Geneid} column must correspond to the row names of
\code{norm_counts}.}

\item{gene_type}{character. Column name of \code{gene_infos} in which
\code{gene} should be found.}

\item{showRegion}{logical. Whether to plot or not the confidence interval of
the regressions.}

\item{level}{numeric. Confidence level to show, if \code{showRegion} is
\code{TRUE}}

\item{threshold}{numeric. If all the data from an experiment is below the
threshold not fit are going to be shown. Should match the \code{threshold}
used in \code{\link{inferDecay}} function.}

\item{experiments}{character vector. Experiments to plot. Must match names
found in the ExperimentName column of \code{metadata}. By default plot all
the available experiments.}

\item{control}{list. Further control ggplot2 output. This must be a named
list with the names corresponding to ggplot2 function and the associated
value is also a named list of the ggplot2 function argument name and its
associated value.}
}
\description{
This function plots the fit for specified genes and experiments.
}
\examples{
attach(MEF_dataset)
plotGeneFit(gene = "ENSMUSG00000069020.7", norm_counts = norm_counts,
            metadata = metadata, decay_result = decay,
            gene_infos = gene_infos)
# Add some control over the ggplot2 output
plotGeneFit(gene = "Ccl5", norm_counts = norm_counts, gene_type = 'Symbol',
            metadata = metadata, decay_result = decay,
            gene_infos = gene_infos, control=list(facet_grid=list(cols=ggplot2::vars(Stimulus))))
detach(MEF_dataset)
}
